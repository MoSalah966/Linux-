youtube course 
df >> show partitions 
lsblk >> to check disks
fdisk -l  >> to start making a partitions
fdisk /dev/sdb
/ m  >> for help
/ n >> add new partition
/ p >> primary 
/ put the partition number
/ +5 G
/ p for print and check
/ w  for write 
lsblk
partprobe   > to scan your disks to make kernal know what you add
partprobe /dev/sdb
mkfs.ext4 /dev/sdb1   > make filesystem type extend 4 to partition sdb1
fdisk -l 
/d   >> to delete

cat /dev/random    >> write too much random data
cat /dev/random >> /dev/sdb    #uncontrolled process
dd if=/dev/random of=/dev/sdb bs=1b count=512 
# disk dumb input file and output file and block size and count to control what and how much you will write
dd if=/dev/zero of=bigfile bs=1M count=100
# write a file called bigfile in my current path with 100 mega
# if it was random not zero it won't be 100 mega it will be less because zero like format
mkfs.xfs -f /dev/sdb1   # -f here to format any inodes from the previous file system
mkfs.xfs -f -isize=512 /dev/sdb1  # determine the inode size
mount /dev/sdb1 /media/
# mount file system of partition sdb1 in media
umount /media  
# to un mount /media and make the partition unaccessable 
dumpe2fs /dev/sdb1    
# to get info about the ext partition
umount /dev/sdb1
e2fsck /dev/sdb1   
# check file system partition but only in case it's unmounted
dd if=/dev/sdb1 of=/sdb1-backup   
# even if it's corrupted make a backup in a file called sdb1-backup
dd if=/sdb1-backup of=/dev/sdb1
# to restore
# if you mount twice on same place you have to umount twice also
mount -t ext4 /dev/sdb1 /media 
# mount with specify the file system type
blkid #to show blocks uuid
mount UUID=xxxxxxx /media/
e2label /dev/sdb5 oracle
mount LABEL="oracle" /media
# syntax of /etc/fstab
vim /etc/fstab
# dev   mountpoint  type    mountoptions    dumporder   fs-checkorder
/dev/sdb5   /media  ext4    defaults             1           1
mount -a # tell the kernal to mount any thing in fstab

du -hsx * | sort -rh | head -10
#to get the most biggest file in the path
cat /etc/mtab  #to copy from it the syntax of the fstab file simce it's the mount tab file

cfdisk /dev/sdb  #showing disks in a different UI

>>compression<<
gzip  #faster
bzip2 # higher in compression retio 
gzip file1
gunzip file1
du -sh etc/  # disk usage - summerize human readable to etc
tar cf etc-backup.tar etc/   #create file archive from etc
tar xf etc-backup.tar        # extract file 
tar cvf etc-backup.tar      # create verbose means show me what the files you are archiving now
tar cvfz etc-backup.tar.gz etc/  #archive and compress directory with gzip
tar cvfj etc-backup.tar.bz2 etc/ #archive and compress directory with bzip2
tar tvfz etc-backup.tar.gz   # t means list this archiving files
------------------------------------------------------------------
>>processes<<
ps 
ps -a   #running processes from all the shells or all terminals
ps aux  # all the processes on the system with users pid cpu and mem
kill 9687 #kill with process ID 
kill -l   #show all signals 
kill -9 9687 #signal kill to force killing
ps -ef | less   #ppid alsso
pstree   #tree of the process
pgrep firefox  #search for pid
pkill firefox  #kill with process name
firefox &  #run this in background
fg  # fore ground 
jobs
fg %1 
bg %1
killall firefox
# the nice value is from -20 to 19 and the normal is 0 for any process and the highest is -20
#you can click on k inside top command to kill a process
nice -n 15 firefox   # give firefox process priority 15
renice -n -15 11852  #for process that already run and here we mention it with ID
whereis ls  #search for a command binary and doc
what is ls  #where is this command
locate network | less   # search for any file called network or include this word
# if you add file now, locate command will not find it till a half day of adding this file or you can force with
updatedb

find /etc/ -name network   #search in etc for network file
find /etc/ -iname network  #search with insensitive name
find / -iname network* 
find /etc/ -perm 755 
find /home/ -group student   # any file owned by gp student
find /home/ -user user-1  
find / -atime +1    #any file accessed since 1 day
find /etc/ -iname network -exec cp {} work/ \;
#find network under etc and execute the result at work directory
# if you want to copy directory add -r
grep root /etc/passwd   # grep the line that contain root word in passwd
grep -i root /etc/passwd  #insensitive 
grep word1 file1   # get the word word1 from file1
grep -v test file1  # give me any line not has test word in file1
grep -n # give the number of line that has the word 
grep -R root /etc/ # recursive means in all the path you give it
cut -f 1 -d : /etc/passwd  
#give me the field 1 means column 1 with dilemeter means the separation between a
#column and another is : in /etc/passwd
cut -f 1,3 -d : /etc/passwd 
# give me the columns 1 and 3 
# separation could be anything not just a :
cut -f 1-3  # give me from column 1 to 3
cut -f 3 -d : /etc/passwd | sort   #sort put the results in order
| sort -n  #sort numeric order
cut -d : -f 7 /etc/passwd | uniq 
# don't repeat the results
cut -d : -f 7 /etc | sort | uniq
>>VIM<<
n #next result
N #previous result
o #enter insert mode with new line under the line you are in 
O #enter insert above my line
yy #yank means copy this link
p # paste whole line
3 yy #copy three lines > nyy
dd # cut this line 
:12  #navigate to line 12
:set number #numbering the file 
:set nonumber #cancel numbering
u # undo 
dw #delete word
dl #delete leter
:7,10d  #delete lines from 7 to 10
:.,$d  #delete from cursor to end of the file
. #redo
gg  #go to the first line
G  #go to the end of file
:%s/sync/replicate  #substitute the sync word on cursor in file to replicate 
:%s/sync/replicate/g #g means global that means subsitute all the words sync to replicate
:r file1   # put all content in file1 inside this file in the location of the cursor
:w newfile #write this content in a file called new file
:w >> exsistingfile # write content inside current file to exsisting file 
d$ ## erase from the cursor to the end of line
d0 ## erase from the cursor to the start of the line
:!command ##to write any command on console when you are inside the file without exit and back again
:.!command #write the command output inside the file where the cursor point
yum/apt search httpd   #search for httpd package
chkconfig crond off = systemctl disable crond
systemctl is-enabled crond.service #asking is this service is enabled
systemctl is-active crond
systemctl poweroff #power off the machine
systemctl reboot   #reboot machine
systemctl mask crond.service  #mask service to make sure it won't start back after restart by itself
systemctl unmask crond  #unmasking the service
systemctl get-default # to know what is the default target for systemd >gui or cli
systemctl set-default multi-user.target # set default to multiuser.target means open CLI
runlevel #show what is the target number that you are stands on now
systemctl isolate graphical.target # run graphical target without reboot after i set the cli as default so both now are running
init 6 # reboot for the machine
init 0 # power off
- all the files for systemd are in /usr/lib/systemd/system
telinit = init
systemctl list-units # all units files of systemd with status
ls /boot/grub2/  #files for bootloader
less /boot/grub2/grub.config #conf file for bootloader
fdisk -l /dev/nvme0n1..... #to know which OS installed on which disk
- in case you want to make the time for boot different
vim /boot/grub2/grub.cfg 
set timeout=5  #change 5 to ex. 30
- in case i do wrong writes on the file /etc/grub2.cfg and i want to regenerate it
grub2-mkconfig -o /boot/grub2/grub.cfg  # -o means output and etc/grub2 will back to its original state
- in case you want to fix some values in grub2 file in case of regeneration
vim /etc/sysconfig/grub
set timeout=5
grub default=saved #means will choose the first OS if you have 2 and you can change it from saved to 2
grub2-mkconfig -o /boot/grub2/grub.cfg 
#if you change anything in this file, it will be fixed in /etc/grub2.cfg even if you run command grub2-mkconfig
#you have to run grub2-mkconfig after modifying in etc/sysconfig/grub file
#grub start numbering menuentries from 0 not from 1
ls -lZ # to show label of every file 
ls -lZ /etc/passwd
-------------------------------
- to reset root pass
-------------------------------
reboot
e  #to edit from boot screen 
rd.break #in the end of the last line means don't continue boot process
ctrl+x #to start
# it will give you a terminal with root access
mount -o remount,rw /sysroot/  #remount option with read write for the file system sysroot
passwd # to change password
touch /.autorelabel  # to relabel shadow file in /etc/shadow  after changing the root password
exit
reboot
------------------------------
ctrl+alt+delete #reboot the machine and must be disbabled as a best practice 
- to disabled them:
#cd /usr/lib/systemd/system/
#ls -l | grep -i del 
#vim ctrl-alt-del.target 
- disable it with one command: systemctl mask ctrl-alt-del.target
#this command create symlink from /etc/systemd/system/ctrl-alt-del.target to /dev/null
systemctl daemon-reload #to reload daemon after masking 
-------------------------------
---Network Manager---
nmcli #open network Manager
ip addr show = ip a s
